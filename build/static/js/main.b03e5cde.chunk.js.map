{"version":3,"sources":["reducers/notificationReducer.js","services/blogs.js","services/user.js","reducers/blogUsersReducer.js","reducers/blogReducer.js","components/Togglable.js","components/BlogForm.js","components/Blog.js","components/Notification.js","components/Users.js","services/login.js","reducers/userReducer.js","components/LoginForm.js","components/NavBar.js","App.js","components/store.js","index.js"],"names":["timeoutID","baseUrl","token","getAll","a","axios","get","request","data","sort","b","likes","create","newObject","config","headers","Authorization","post","response","increaseLikes","updatedBlog","put","id","addComment","setToken","newToken","deletePost","delete","setNotification","content","style","time","dispatch","type","clearTimeout","setTimeout","notificationReducer","state","action","console","log","initializeUsers","userService","users","userReducer","blogReducer","map","blog","filter","Togglable","React","forwardRef","props","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","Button","variant","onClick","buttonLabel","className","children","displayName","BlogForm","useDispatch","title","setTitle","author","setAuthor","url","setUrl","onSubmit","event","preventDefault","blogService","newBlog","notificationMessage","user","value","onChange","e","target","useStyles","makeStyles","inputField","marginLeft","inputButton","position","top","BlogHeader","to","Blogs","blogs","TableContainer","component","Paper","Table","TableBody","TableRow","key","TableCell","Blog","history","useHistory","blogId","useParams","find","n","toString","comment","setComment","classes","removePost","removeBlog","push","addBlogComment","comments","concat","List","ListItem","ListItemText","primary","ListItemIcon","username","size","color","data-id","index","TextField","label","Notification","notification","useSelector","Alert","severity","User","userId","Users","length","login","credentials","logout","window","localStorage","setItem","LoginForm","setUsername","password","setPassword","loggedInUser","JSON","stringify","loginUser","NavigationBar","AppBar","Toolbar","Typography","App","useEffect","loggedUserJSON","getItem","userParsed","parse","setLogin","Container","message","path","reducer","combineReducers","blogUsersReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b03e5cde.chunk.js","sourcesContent":["let timeoutID\n\nconst notificationReducer = (state = null, action) => {\n    switch (action.type) {\n    case 'SET_NOTIFICATION':\n        return action.data\n    case 'REMOVE_NOTIFICATION':\n        return null\n    default:\n        return state\n    }\n}\n\nexport const setNotification = (content, style, time) => {\n    return dispatch => {\n        dispatch({\n            type: 'SET_NOTIFICATION',\n            data: {\n                content: content,\n                style: style\n            }\n        })\n        if (timeoutID) clearTimeout(timeoutID)\n        timeoutID = setTimeout(() => {\n            dispatch({\n                type: 'REMOVE_NOTIFICATION',\n                data: null\n            })\n        }, time * 1000)\n\n    }\n}\n\nexport const removeNotification = () => {\n    return {\n        type: 'REMOVE_NOTIFICATION',\n        data: null\n    }\n}\n\nexport default notificationReducer","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n    token = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n    const request = await axios.get(baseUrl)\n    return request.data.sort((a, b) => b.likes - a.likes)\n}\n\nconst create = async newObject => {\n    const config = {\n        headers: { Authorization: token },\n    }\n\n    const response = await axios.post(baseUrl, newObject, config)\n    return response.data\n}\n\nconst increaseLikes = async (updatedBlog) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n\n    const response = await axios.put(`${baseUrl}/${updatedBlog.id}`, updatedBlog, config)\n    return response.data\n}\n\nconst addComment = async (updatedBlog) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n\n    const response = await axios.put(`${baseUrl}/${updatedBlog.id}`, updatedBlog, config)\n    return response.data\n}\n\nconst deletePost = async (id) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n\n    const response = await axios.delete(`${baseUrl}/${id}`, config)\n    return response.data\n}\n\nexport default { getAll, setToken, create, increaseLikes, deletePost, addComment }","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nlet token = null\n\nconst setToken = newToken => {\n    token = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n    const request = await axios.get(baseUrl)\n    console.log(request.data)\n    return request.data\n}\n\nexport default { getAll, setToken }","import userService from '../services/user'\n\nconst userReducer = (state = [], action) => {\n    switch (action.type) {\n    case 'INIT_USERS':\n        return action.data\n    default:\n        return state\n    }\n}\n\nexport const initializeUsers = () => {\n    return async dispatch => {\n        const users = await userService.getAll()\n        dispatch({\n            type: 'INIT_USERS',\n            data: users\n        })\n    }\n}\n\nexport default userReducer","import blogService from '../services/blogs'\nimport { setNotification } from './notificationReducer'\nimport { initializeUsers } from './blogUsersReducer'\n\nconst blogReducer = (state = [], action) => {\n    switch (action.type) {\n    case 'UPDATE_BLOG':\n        const id = action.data.id\n        return state.map(blog => blog.id !== id ? blog : action.data)\n    case 'NEW_BLOG':\n        return [ ...state, action.data]\n    case 'INIT_BLOGS':\n        return action.data\n    case 'REMOVE_BLOG':\n        return state.filter(blog => blog.id !== action.data)\n    default:\n        return state\n    }\n}\n\nexport const createBlog = (content) => {\n    return async dispatch => {\n        const newBlog = await blogService.create(content)\n        const notificationMessage = `New blog ${content.title} by ${content.author} added`\n        dispatch(setNotification(notificationMessage, 'success', 5))\n        dispatch({\n            type: 'NEW_BLOG',\n            data: {\n                ...newBlog,\n                user: 'NewlyCreatedBlog'\n            }\n        })\n        dispatch(initializeUsers())\n    }\n}\n\nexport const initializeBlogs = () => {\n    return async dispatch => {\n        const blogs = await blogService.getAll()\n        console.log(blogs)\n        dispatch({\n            type: 'INIT_BLOGS',\n            data: blogs\n        })\n    }\n}\n\nexport const addLike = (content) => {\n    return async dispatch => {\n        const updatedBlog = await blogService.increaseLikes(content)\n        dispatch({\n            type: 'UPDATE_BLOG',\n            data: updatedBlog\n        })\n    }\n}\n\n\nexport const addComment = (blog) => {\n    return async dispatch => {\n        const updatedBlog = await blogService.addComment(blog)\n        dispatch({\n            type: 'UPDATE_BLOG',\n            data: updatedBlog\n        })\n    }\n}\n\nexport const removeBlog = (blogId) => {\n    return async dispatch => {\n        try {\n            const deletedBlog = await blogService.deletePost(blogId)\n        } catch (error) {\n            console.log(error)\n            return\n        }\n        dispatch({\n            type: 'REMOVE_BLOG',\n            data: blogId\n        })\n    }\n}\n\n\nexport default blogReducer","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\nimport { Button } from '@material-ui/core'\n\nconst Togglable = React.forwardRef((props, ref) => {\n    const [visible, setVisible] = useState(false)\n\n    const hideWhenVisible = { display: visible ? 'none' : '' }\n    const showWhenVisible = { display: visible ? '' : 'none' }\n\n    const toggleVisibility = () => {\n        setVisible(!visible)\n    }\n\n    Togglable.propTypes = {\n        buttonLabel: PropTypes.string.isRequired\n    }\n\n    useImperativeHandle(ref, () => {\n        return {\n            toggleVisibility\n        }\n    })\n\n    return (\n        <div>\n            <div style={hideWhenVisible}>\n                <Button variant=\"contained\" onClick={toggleVisibility}>\n                    {props.buttonLabel}\n                </Button>\n            </div>\n            <div style={showWhenVisible} className='togglableContent'>\n                {props.children}\n                <Button variant=\"contained\" onClick={toggleVisibility}>\n                    Cancel\n                </Button>\n            </div>\n        </div>\n    )\n})\n\nTogglable.displayName = 'Togglable'\n\nexport default Togglable","import React, { useState } from 'react'\nimport { createBlog } from '../reducers/blogReducer'\nimport { useDispatch } from 'react-redux'\nimport Togglable from './Togglable'\n\nconst BlogForm = () => {\n    const dispatch = useDispatch()\n    const [title, setTitle] = useState('')\n    const [author, setAuthor] = useState('')\n    const [url, setUrl] = useState('')\n\n    const addBlog = (event) => {\n        event.preventDefault()\n\n        dispatch(createBlog({\n            title: title,\n            author: author,\n            url: url\n        }, title, author))\n\n        setUrl('')\n        setTitle('')\n        setAuthor('')\n    }\n\n\n    return (\n        <Togglable buttonLabel='New blog'>\n            <div className='formDiv'>\n                <form onSubmit={addBlog}>\n                    Title: <input\n                        id='title'\n                        value={title}\n                        onChange={(e) => setTitle(e.target.value)}\n                    />\n                    <br />\n                Author: <input\n                        id='author'\n                        value={author}\n                        onChange={(e) => setAuthor(e.target.value)}\n                    />\n                    <br />\n                Url: <input\n                        id='url'\n                        value={url}\n                        onChange={(e) => setUrl(e.target.value)}\n                    />\n                    <br />\n                    <button type=\"submit\">Save</button>\n                </form>\n            </div>\n        </Togglable>\n    )\n}\n\n\nexport default BlogForm","import React, { useState } from 'react'\nimport { Link, useParams, useHistory } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { addComment, addLike, removeBlog } from '../reducers/blogReducer'\nimport BlogForm from './BlogForm'\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableRow,\n    Paper,\n    TextField,\n    Button,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport FavoriteIcon from '@material-ui/icons/Favorite'\n\nconst useStyles = makeStyles({\n    inputField: {\n        marginLeft: '10px',\n    },\n    inputButton: {\n        marginLeft: '10px',\n        position: 'relative',\n        top: '17px'\n    },\n})\n\n\nconst BlogHeader = ({ title, author, id }) => {\n    return (\n        <div>\n            <Link to={`/blogs/${id}`}>\n                {title} by {author}\n            </Link>\n        </div>\n    )\n}\n\nconst Blogs = ({ blogs }) => {\n    return (\n        <div>\n            <h2>Create new blog</h2>\n            <BlogForm />\n            <br></br>\n            <TableContainer component={Paper}>\n                <Table>\n                    <TableBody>\n                        {blogs.map(blog =>\n                            <TableRow key={blog.id}>\n                                <TableCell>\n                                    <BlogHeader\n                                        title={blog.title}\n                                        author={blog.author}\n                                        id={blog.id}\n                                    />\n                                </TableCell>\n                            </TableRow>\n                        )}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </div>\n    )\n}\n\nconst Blog = ({ blogs, user }) => {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const blogId = useParams().id\n    const blog = blogs.find(n => n.id.toString() === blogId.toString())\n    const [comment, setComment] = useState('')\n    const classes = useStyles()\n\n    if (!blog) return null\n\n\n    const increaseLikes = (blog) => {\n        let updatedBlog = blog\n        updatedBlog.likes = +updatedBlog.likes + 1\n        updatedBlog.user = updatedBlog.user.id ? updatedBlog.user.id : updatedBlog.user\n        dispatch(addLike(updatedBlog))\n    }\n\n\n    const removePost = (id) => {\n        dispatch(removeBlog(id))\n        history.push('/')\n    }\n\n    const addBlogComment = (event, blog, comment) => {\n        event.preventDefault()\n        const updatedBlog = {\n            ...blog,\n            comments: blog.comments.concat(comment),\n            user: blog.user && blog.user.id ? blog.user.id : blog.user\n        }\n        dispatch(addComment(updatedBlog, comment))\n        setComment('')\n    }\n\n    return (\n        <div>\n            <div>\n                <h2>{blog.title}</h2>\n                <List component=\"nav\">\n                    <ListItem>\n                        <ListItemText primary={`Url: ${blog.url}`} />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText primary={`Likes: ${blog.likes}`} />\n                        <ListItemIcon>\n                            <FavoriteIcon onClick={() => increaseLikes(blog)} />\n                        </ListItemIcon>\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText primary={`Author: ${blog.author}`} />\n                    </ListItem>\n                    {user && (user.username === blog.user.username) ?\n                        <ListItem>\n                            <ListItemIcon>\n                                <Button\n                                    size=\"small\"\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    type=\"submit\"\n                                    onClick={() => removePost(blog.id)}\n                                    data-id={blog.id}\n                                >\n                                    Remove\n                                </Button>\n                            </ListItemIcon>\n                        </ListItem> : <div></div>}\n                </List>\n\n                <h3>Comments</h3>\n                <ul>\n                    {blog.comments.map((comment, index) =>\n                        <li key={index}>{comment}</li>\n                    )}\n                </ul>\n                <form onSubmit={(event) => addBlogComment(event, blog, comment)}>\n                    <TextField label=\"comment\" value={comment} className={classes.inputField}\n                        onChange={({ target }) => setComment(target.value)}\n                    />\n                    <Button\n                        size=\"small\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        type=\"submit\"\n                        className={classes.inputButton}>\n                        Post\n                    </Button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport { Blog, Blogs }","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Alert } from '@material-ui/lab'\n\nconst Notification = () => {\n    const notification = useSelector(state => state.notification)\n\n    if (notification === null) return null\n    return (\n        <Alert severity={notification.style}>\n            {notification.content}\n        </Alert>\n    )\n}\n\nexport default Notification","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Link, useParams } from 'react-router-dom'\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableRow,\n    Paper\n} from '@material-ui/core'\n\nconst User = ({ users }) => {\n    const userId = useParams().id\n    const user = users.find(n => n.id.toString() === userId.toString())\n\n    if (!user) {\n        return null\n    }\n\n\n    return (\n        <div>\n            <h2>{user.username}</h2>\n            <br />\n            <h4>Added Blogs</h4>\n            <ul>\n                {user.blogs.map((blog, index) =>\n                    <li key={index}>{blog.title}</li>\n                )}\n            </ul>\n        </div>\n    )\n}\n\n\n\nconst Users = () => {\n    const users = useSelector(state => state.users)\n    console.log(users)\n    return (\n        <div className='userGridParent'>\n            <span className='userGridItem'>\n                <h3>Users</h3>\n                <br />\n                <b>Blogs created:</b>\n            </span>\n            <TableContainer component={Paper}>\n                <Table>\n                    <TableBody>\n                        {users.map((user, index) =>\n                            <TableRow key={index}>\n                                <TableCell>\n                                    {user.username}\n                                </TableCell>\n                                <TableCell>\n                                    {user.blogs.length}\n                                </TableCell>\n                            </TableRow>\n                        )}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </div>\n    )\n}\n\n\nexport { Users, User }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n    const response = await axios.post(baseUrl, credentials)\n    return response.data\n}\n\nexport default { login }","import userService from '../services/login'\nimport blogService from '../services/blogs'\nimport { setNotification } from './notificationReducer'\n\nconst userReducer = (state = [], action) => {\n    switch (action.type) {\n    case 'LOGIN':\n        return action.data\n    case 'LOGOUT':\n        return null\n    default:\n        return state\n    }\n}\n\nexport const loginUser = (username, password) => {\n    return async dispatch => {\n        try {\n            const loggedInUser = await userService.login({\n                username, password,\n            })\n            window.localStorage.setItem(\n                'loggedBlogappUser', JSON.stringify(loggedInUser)\n            )\n            blogService.setToken(loggedInUser.token)\n            const notificationMessage = `${username} successfully logged in`\n            dispatch(setNotification(notificationMessage, 'success', 5))\n            dispatch({\n                type: 'LOGIN',\n                data: loggedInUser\n            })\n        } catch (error) {\n            const notificationMessage = 'Wrong credentials'\n            dispatch(setNotification(notificationMessage, 'error', 5))\n        }\n    }\n}\n\nexport const setLogin = (user) => {\n    return dispatch => {\n        if (user === null) {\n            logout()\n            return\n        } else {\n            blogService.setToken(user.token)\n            dispatch({\n                type: 'LOGIN',\n                data: user\n            })\n        }\n    }\n}\n\nexport const logout = () => {\n    return async dispatch => {\n        window.localStorage.setItem(\n            'loggedBlogappUser', null\n        )\n\n        dispatch({\n            type: 'LOGOUT',\n            data: null\n        })\n    }\n}\n\nexport default userReducer\n","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { loginUser } from '../reducers/userReducer'\nimport Togglable from './Togglable'\nimport { TextField, Button } from '@material-ui/core'\n\nconst LoginForm = () => {\n    const dispatch = useDispatch()\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n\n    const onSubmit = (event) => {\n        event.preventDefault()\n        dispatch(loginUser(username, password))\n        setUsername('')\n        setPassword('')\n    }\n\n    return (\n        <Togglable buttonLabel='login'>\n            <div>\n                <h2>Login</h2>\n\n                <form onSubmit={onSubmit}>\n\n                    <div>\n                        <TextField label=\"username\" value={username}\n                            onChange={({ target }) => setUsername(target.value)}\n                        />\n                    </div>\n                    <div>\n                        <TextField label=\"password\" value={password}\n                            onChange={({ target }) => setPassword(target.value)}\n                            type=\"password\"\n                        />\n                    </div>\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                    Login\n                    </Button>\n                </form>\n            </div>\n        </Togglable>\n    )\n}\n\n\nexport default LoginForm","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { logout } from '../reducers/userReducer'\nimport { Button, AppBar, Toolbar, Typography } from '@material-ui/core'\n\n\nconst NavigationBar = () => {\n    const dispatch = useDispatch()\n    const user = useSelector(state => state.user)\n\n    const handleLogOut = () => {\n        dispatch(logout())\n    }\n\n    return (\n        <div>\n            <AppBar position=\"static\">\n                <Toolbar variant=\"dense\">\n                    <Typography variant=\"h6\" color=\"inherit\" className=\"menuBar\" id=\"HomeButton\">\n                        <Link to='/'>Home</Link>\n                    </Typography>\n                    <Typography variant=\"h6\" color=\"inherit\" className=\"menuBar\">\n                        <Link to='/users'>Users</Link>\n                    </Typography>\n                    <div className=\"rightMenu menuBar\">{`${user.username} logged in`}</div>\n                    <Button className=\"rightMenu menuBar\"\n                        variant=\"contained\" size='small' onClick={handleLogOut}>\n                        Log you out\n                    </Button>\n                </Toolbar>\n            </AppBar>\n            <h2>Blogs</h2>\n            <br></br>\n        </div>\n    )\n}\n\nexport default NavigationBar","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Container from '@material-ui/core/Container'\nimport {\n    BrowserRouter as Router,\n    Switch, Route\n} from 'react-router-dom'\nimport { Blog, Blogs } from './components/Blog'\nimport Notification from './components/Notification'\nimport { User, Users } from './components/Users'\nimport LoginForm from './components/LoginForm'\nimport NavigationBar from './components/NavBar'\nimport { initializeBlogs } from './reducers/blogReducer'\nimport { initializeUsers } from './reducers/blogUsersReducer'\nimport { setLogin } from './reducers/userReducer'\n\nconst App = () => {\n    const dispatch = useDispatch()\n    const notification = useSelector(state => state.notification)\n    const blogs = useSelector(state => state.blogs)\n    const user = useSelector(state => state.user)\n    const users = useSelector(state => state.users)\n\n    useEffect(() => {\n        let loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n        if (loggedUserJSON) {\n            const userParsed = JSON.parse(loggedUserJSON)\n            if (user === null) return\n            dispatch(setLogin(userParsed))\n        }\n    }, [dispatch])\n\n    useEffect(() => {\n        dispatch(initializeBlogs())\n        dispatch(initializeUsers())\n    }, [dispatch])\n\n    return (\n        <Container>\n            <Router>\n                <div>\n                    {user === null ?\n                        <div>\n                            <h2>Please log in</h2>\n                            <Notification message={notification} />\n                            <LoginForm />\n                        </div> :\n                        <div>\n                            <NavigationBar />\n                            <Notification message={notification} />\n                            <Switch>\n                                <Route path=\"/users/:id\">\n                                    <User users={users} />\n                                </Route>\n                                <Route path=\"/blogs/:id\">\n                                    <Blog blogs={blogs} user={user} />\n                                </Route>\n                                <Route path=\"/users\">\n                                    <Users />\n                                </Route>\n                                <Route path=\"/\">\n                                    <Blogs blogs={blogs} />\n                                </Route>\n                            </Switch>\n                        </div>\n                    }\n                </div>\n\n            </Router>\n        </Container>\n    )\n}\n\nexport default App","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport notificationReducer from '../reducers/notificationReducer'\nimport blogReducer from '../reducers/blogReducer'\nimport userReducer from '../reducers/userReducer'\nimport blogUsersReducer from '../reducers/blogUsersReducer'\n\nconst reducer = combineReducers({\n    notification: notificationReducer,\n    blogs: blogReducer,\n    user: userReducer,\n    users: blogUsersReducer\n})\n\nconst store = createStore(\n    reducer,\n    composeWithDevTools(\n        applyMiddleware(thunk)\n    )\n)\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport store from './components/store'\nimport './index.css'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n)"],"sourceRoot":""}